<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.srm.purchasecooperation.cux.order.infra.mapper.RcwlPoLineMapper">
    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap id="BaseResultMap" type="org.srm.purchasecooperation.order.domain.entity.PoLine">
        <result column="po_line_id" property="poLineId" jdbcType="DECIMAL"/>
        <result column="po_header_id" property="poHeaderId" jdbcType="DECIMAL"/>
        <result column="tenant_id" property="tenantId" jdbcType="DECIMAL"/>
        <result column="line_num" property="lineNum" jdbcType="DECIMAL"/>
        <result column="display_line_num" property="displayLineNum" jdbcType="VARCHAR"/>
        <result column="version_num" property="versionNum" jdbcType="DECIMAL"/>
        <result column="item_id" property="itemId" jdbcType="DECIMAL"/>
        <result column="item_code" property="itemCode" jdbcType="VARCHAR"/>
        <result column="old_item_code" property="oldItemCode" jdbcType="VARCHAR"/>
        <result column="item_name" property="itemName" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="DECIMAL"/>
        <result column="uom_id" property="uomId" jdbcType="DECIMAL"/>
        <result column="price_uom_id" property="priceUomId" jdbcType="DECIMAL"/>
        <result column="unit_conversion_molecule" property="unitConversionMolecule" jdbcType="DECIMAL"/>
        <result column="unit_conversion_denominator" property="unitConversionDenominator" jdbcType="DECIMAL"/>
        <result column="brand" property="brand" jdbcType="VARCHAR"/>
        <result column="specifications" property="specifications" jdbcType="VARCHAR"/>
        <result column="model" property="model" jdbcType="VARCHAR"/>
        <result column="ean_code" property="eanCode" jdbcType="VARCHAR"/>
        <result column="lot_num" property="lotNum" jdbcType="VARCHAR"/>
        <result column="lot_validity_date" property="lotValidityDate" jdbcType="DATE"/>
        <result column="quantity" property="quantity" jdbcType="DECIMAL"/>
        <result column="unit_price" property="unitPrice" jdbcType="DECIMAL"/>
        <result column="entered_tax_included_price" property="enteredTaxIncludedPrice" jdbcType="DECIMAL"/>
        <result column="unit_price_batch" property="unitPriceBatch" jdbcType="DECIMAL"/>
        <result column="line_amount" property="lineAmount" jdbcType="DECIMAL"/>
        <result column="tax_included_line_amount" property="taxIncludedLineAmount" jdbcType="DECIMAL"/>
        <result column="tax_id" property="taxId" jdbcType="DECIMAL"/>
        <result column="tax_rate" property="taxRate" jdbcType="DECIMAL"/>
        <result column="user_hold_flag" property="userHoldFlag" jdbcType="DECIMAL"/>
        <result column="cancelled_flag" property="cancelledFlag" jdbcType="DECIMAL"/>
        <result column="cancelled_by" property="cancelledBy" jdbcType="DECIMAL"/>
        <result column="cancelled_date" property="cancelledDate" jdbcType="DATE"/>
        <result column="cancelled_remark" property="cancelledRemark" jdbcType="VARCHAR"/>
        <result column="closed_flag" property="closedFlag" jdbcType="DECIMAL"/>
        <result column="closed_by" property="closedBy" jdbcType="DECIMAL"/>
        <result column="closed_date" property="closedDate" jdbcType="DATE"/>
        <result column="closed_remark" property="closedRemark" jdbcType="VARCHAR"/>
        <result column="manufacturer_code" property="manufacturerCode" jdbcType="VARCHAR"/>
        <result column="manufacturer_name" property="manufacturerName" jdbcType="VARCHAR"/>
        <result column="agency_code" property="agencyCode" jdbcType="VARCHAR"/>
        <result column="agency_name" property="agencyName" jdbcType="VARCHAR"/>
        <result column="erp_po_line_type_code" property="erpPoLineTypeCode" jdbcType="VARCHAR"/>
        <result column="erp_po_line_type_desc" property="erpPoLineTypeDesc" jdbcType="VARCHAR"/>
        <result column="original_supply_code" property="originalSupplyCode" jdbcType="VARCHAR"/>
        <result column="original_supply_name" property="originalSupplyName" jdbcType="VARCHAR"/>
        <result column="approved_date" property="approvedDate" jdbcType="DATE"/>
        <result column="inv_organization_id" property="invOrganizationId" jdbcType="DECIMAL"/>
        <result column="consigned_flag" property="consignedFlag" jdbcType="DECIMAL"/>
        <result column="returned_flag" property="returnedFlag" jdbcType="DECIMAL"/>
        <result column="free_flag" property="freeFlag" jdbcType="DECIMAL"/>
        <result column="immed_shipped_flag" property="immedShippedFlag" jdbcType="DECIMAL"/>
        <result column="base_currency_code" property="baseCurrencyCode" jdbcType="VARCHAR"/>
        <result column="currency_code" property="currencyCode" jdbcType="VARCHAR"/>
        <result column="rate_type" property="rateType" jdbcType="VARCHAR"/>
        <result column="rate_date" property="rateDate" jdbcType="DATE"/>
        <result column="rate" property="rate" jdbcType="DECIMAL"/>
        <result column="purchase_batch" property="purchaseBatch" jdbcType="DECIMAL"/>
        <result column="provisional_estimate_flag" property="provisionalEstimateFlag" jdbcType="DECIMAL"/>
        <result column="deliver_over" property="deliverOver" jdbcType="DECIMAL"/>
        <result column="deliver_below" property="deliverBelow" jdbcType="DECIMAL"/>
        <result column="sub_supplier_flag" property="subSupplierFlag" jdbcType="DECIMAL"/>
        <result column="sub_supplier_id" property="subSupplierId" jdbcType="DECIMAL"/>
        <result column="sub_supplier_code" property="subSupplierCode" jdbcType="VARCHAR"/>
        <result column="sub_supplier_name" property="subSupplierName" jdbcType="VARCHAR"/>
        <result column="demand_unit_id" property="demandUnitId" jdbcType="DECIMAL"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="erp_creation_date" property="erpCreationDate" jdbcType="DATE"/>
        <result column="erp_last_update_date" property="erpLastUpdateDate" jdbcType="DATE"/>
        <result column="erp_invoice_validate_flag" property="erpInvoiceValidateFlag" jdbcType="DECIMAL"/>
        <result column="object_version_number" property="objectVersionNumber" jdbcType="DECIMAL"/>
        <result column="creation_date" property="creationDate" jdbcType="DATE"/>
        <result column="created_by" property="createdBy" jdbcType="DECIMAL"/>
        <result column="last_updated_by" property="lastUpdatedBy" jdbcType="DECIMAL"/>
        <result column="last_update_date" property="lastUpdateDate" jdbcType="DATE"/>
        <result column="price_library_id" property="priceLibraryId" jdbcType="DECIMAL"/>
        <result column="ladder_inquiry_flag" property="ladderInquiryFlag" jdbcType="DECIMAL"/>


    </resultMap>


    <select id="listLineDetail" resultType="org.srm.purchasecooperation.order.api.dto.PoLineDetailDTO">
        <bind name="lang" value="@io.choerodon.mybatis.helper.LanguageHelper@language()"/>
        SELECT
        ( CASE WHEN #{nowDate}>spll.promise_delivery_date and sph.confirmed_flag = 1 and spl.cancelled_flag = 0 and sph.publish_cancel_flag = 0 and spll.closed_flag = 0 THEN (CASE spll.quantity WHEN spll.net_received_quantity THEN 0 ELSE 1 END) ELSE 0 END ) AS beyond_quantity,
        sph.tenant_id,
        sph.po_header_id,
        sph.supplier_company_id,
        sph.supplier_id,
        sph.company_id,
        sph.status_code,
        sph.confirmed_flag,
        sph.ou_id,
        sph.publish_cancel_flag,
        sph.po_source_platform as source_platform_code,
        sph.ship_to_location_id,
        sph.purchase_org_id,
        sph.ship_to_location_address,
        sph.agent_id,
        spl.po_line_id,
        spl.line_num,
        spl.attribute_varchar21,
        spll.original_quantity,
        spll.quantity,
        spll.po_line_location_type,
        spl.unit_price,
        spl.benchmark_price_type,
        spl.entered_tax_included_price,
        spl.line_amount,
        spl.tax_included_line_amount,
        ( CASE WHEN spl.brand IS NULL or spl.brand ='' THEN him.brand ELSE spl.brand END ) AS brand,
        ( CASE WHEN spl.specifications IS NULL or spl.specifications ='' THEN him.specifications ELSE spl.specifications END ) AS specifications,
        ( CASE WHEN spl.model IS NULL or spl.model ='' THEN him.model ELSE spl.model END ) AS model,
        spl.manufacturer_name,
        spl.display_line_num AS display_line_num,
        spl.unit_price_batch,
        spl.object_version_number AS line_version_number,
        (CASE WHEN spl.old_item_code IS NULL THEN him.used_item_code
        ELSE spl.old_item_code END) AS old_item_code,
        spl.rate,
        spl.consigned_flag,
        spl.returned_flag,
        spl.free_flag,
        spl.immed_shipped_flag,
        spl.unit_conversion_molecule,
        spl.unit_conversion_denominator,
        case spl.modify_price_flag
        when  2 then -1
        when  1 then 1
        when -1 then -1
        else 0
        end as modify_price_flag,
        spll.cancelled_flag,
        spll.closed_flag,
        spl.currency_code,
        spll.remark,
        spll.feedback,
        spll.need_by_date,
        spll.promise_delivery_date,
        spll.object_version_number AS location_version_number,
        spll.delivery_date_reject_flag AS delivery_date_reject_flag,
        spll.po_line_location_id,
        spll.line_location_num,
        spll.display_line_location_num AS display_line_location_num,
        spl.display_pr_num,
        spl.display_pr_line_num,
        /* 申请人逻辑补充：srm端取订单行，其次取采购申请头的申请人，接口过来的订单取发运行申请人*/
        case when sprl.pr_requested_name is null and sprh.pr_requested_name is null then spll.pur_req_applied_name
             when sprl.pr_requested_name is null then sprh.pr_requested_name
             else sprl.pr_requested_name end as pr_requested_name,
        spl.pr_requested_name AS pur_req_applied_name,
        spl.pr_requested_by,
        spll.ship_to_third_party_name,
        (CASE WHEN spll.ship_to_third_party_address IS NULL THEN sprl.receive_address ELSE spll.ship_to_third_party_address END) AS ship_to_third_party_address,
        (CASE WHEN spll.ship_to_third_party_contact IS NULL THEN CONCAT_WS('-',sprl.receive_contact_name,sprl.receive_tel_num) ELSE spll.ship_to_third_party_contact END) AS ship_to_third_party_contact,
        spll.frozen_flag,
        spll.urgent_flag,
        spll.inv_organization_id,
        spll.inv_inventory_id,
        spl.domestic_line_amount,
        spl.domestic_tax_included_line_amount,
        hc.currency_name,
        spl.tax_id,
        spl.pr_line_id,
        spl.pr_header_id,
        ( CASE WHEN spl.tax_rate IS NULL THEN ht.tax_rate ELSE spl.tax_rate END ) AS tax_rate,
        spl.item_id,
        case
        when spl.item_code is null then him.item_code
        else spl.item_code
        end as item_code,
        case
        when spl.item_name is null then him.item_name
        else spl.item_name
        end as item_name,
        (CASE WHEN spl.common_name IS NULL THEN him.common_name ELSE spl.common_name END) AS common_name,/*通用名*/
        spll.inv_location_id,
        hl.location_name,
        hi.inventory_name,
        spl.category_id,
        hic.category_name,
        spl.uom_id,
        hul.uom_name,
        hu.uom_code,
        hio.organization_name,
        hiog.organization_name as inv_organization_name,
        hupl.uom_name AS price_uom_name,
        hup.uom_code AS price_uom_code,
        spl.product_id,
        spl.product_num,
        spl.product_name,
        hut.unit_id,
        hut.unit_name,
        sprh.pr_type_id,
        CONCAT(ssr.source_num,CONCAT('|',ssr.item_num)) as source_num_and_line,
        --             CONCAT(sprh.display_pr_num,CONCAT('|',sprl.display_line_num)) as display_pr_num_and_display_pr_line_num,
        spl.catalog_name,
        spl.ladder_inquiry_flag,
        (case when spch.pc_num is null then concat(spchd.pc_num,CONCAT('|',spsj.line_num)) else concat(spch.pc_num,CONCAT('|',sps.line_num)) end) AS  contract_num,

        --             查询出订单来源的申请信息
        --             case when spch.pc_source_code='PURCHASE_NEED' then concat(sps.source_code,CONCAT('|',sps.source_line_num)) else CONCAT(sprh.display_pr_num,CONCAT('|',sprl.display_line_num))
        --             end as display_pr_num_and_display_pr_line_num,
        case    when spch.pc_source_code='PURCHASE_NEED'      then concat(sps.source_code,CONCAT('|',sps.source_line_num))
        /*申请——》订单*/
        when sprh.display_pr_num is not null          then CONCAT(sprh.display_pr_num,CONCAT('|',sprl.display_line_num))
        /*申请->寻源->协议->订单*/
        when srlipc.pr_line_id is not null            then CONCAT(srlipc.pr_num,CONCAT('|',srlipc.pr_line_num))
        when sblipc.pr_line_id is not null            then CONCAT(sblipc.pr_num,CONCAT('|',sblipc.pr_line_num))
        /*申请->寻源->订单*/
        when srli.pr_line_id is not null              then CONCAT(srli.pr_num,CONCAT('|',srli.pr_line_num))
        when sbli.pr_line_id is not null              then CONCAT(sbli.pr_num,CONCAT('|',sbli.pr_line_num))
        /*ERP传过来的订单查询 pr编码和pr行*/
        when spll.erp_pr_num is not null              then CONCAT(spll.erp_pr_num,CONCAT('|',spll.erp_pr_line_num))
        end as display_pr_num_and_display_pr_line_num,
        -- srm-29602 查询寻源转订单的来源单据的"是否含税"flag
        CASE WHEN sph.source_bill_type_code = 'SOURCE'
        AND ssr.source_from='RFX'
        AND srli.tax_included_flag IS NOT NULL
        THEN srli.tax_included_flag
        WHEN sph.source_bill_type_code = 'SOURCE'
        AND ssr.source_from='BID'
        AND sbli.tax_included_flag IS NOT NULL
        THEN sbli.tax_included_flag
        ELSE NULL
        END AS tax_included_flag,


        case when spch.pc_source_code='SEARCH_SOURCE_RESULT' then concat(sps.source_code,CONCAT('|',ssrpc.item_num)) else null end as source_code_num,
        --             concat(sps.source_code,CONCAT('|',sps.source_line_num))AS  source_code_num,
        (case when sps.pc_subject_id is null then spsj.pc_subject_id else sps.pc_subject_id end) as hold_pc_line_id,
        (case when spch.pc_header_id is null then spchd.pc_header_id else spch.pc_header_id end) as hold_pc_header_id,
        (case when spch.pc_num is null then spchd.pc_num else spch.pc_num end) as hold_pc_num,
        (case when sps.line_num is null then spsj.line_num else sps.line_num end) as hold_pc_line_num,
        sps.quantity - (case when sps.chanage_order_quantity is null then 0 else sps.chanage_order_quantity end) + (case when spl.quantity is null then 0 else spl.quantity end) can_hold_pc_quantity,
        sprl.quantity - (case when sprl.occupied_quantity is null then 0 else sprl.occupied_quantity end)  + (case when spl.quantity is null then 0 else spl.quantity end) can_hold_pr_quantity,
        sprl.item_id pr_line_item_id,
        sph.source_bill_type_code,
        spl.price_library_id,
        CASE
        WHEN spl.origin_unit_price is not null THEN spl.origin_unit_price
        WHEN spl.price_library_id is not null and sspl.tax_rate = 0 THEN sspl.unit_price
        WHEN spl.price_library_id is not null and sspl.tax_rate >0 THEN round((sspl.unit_price * (1+sspl.tax_rate * 0.01)),2)
        WHEN (sph.po_source_platform ='CATALOGUE' or sph.po_source_platform ='E-COMMERCE') and spl.pr_header_id is not null and spl.pr_line_id is not null THEN sprl.tax_included_unit_price
        ELSE null
        END AS origin_unit_price,
        CASE
        WHEN spll.need_by_date = spll.promise_delivery_date THEN 1
        ELSE 0
        END AS date_equally_flag,
        CASE
        WHEN
        spll.delivery_sync_status IS NOT NULL THEN
        spll.delivery_sync_status ELSE sph.delivery_sync_status
        END AS delivery_sync_status,

        CASE
        WHEN
        spll.delivery_sync_response_msg IS NOT NULL THEN
        spll.delivery_sync_response_msg ELSE sph.delivery_sync_response_msg
        END AS delivery_sync_response_msg,

        CASE
        WHEN
        spll.delivery_sync_date IS NOT NULL THEN
        spll.delivery_sync_date ELSE sph.delivery_sync_date
        END AS delivery_sync_date,
        spl.last_purchase_price,/*最近一次采购价*/
        spl.department_id,/*部门ID*/
        hutl.unit_name AS department_name,
        spl.clear_organization_id,/*结算财务组织ID*/
        hpo.organization_name as clear_organization_name,
        spl.cope_organization_id ,/*应付组织ID*/
        hpo2.organization_name as cope_organization_name,
        ( CASE WHEN spl.chart_code IS NULL or spl.chart_code ='' THEN him.chart_code ELSE spl.chart_code END ) AS chart_code,/*图号*/
        ( CASE WHEN spl.chart_code IS NULL or spl.chart_code ='' THEN him.chart_code ELSE spl.chart_code END ) AS chart_code_new,/*图号*/
        ( CASE WHEN spl.chart_version IS NULL or spl.chart_version ='' THEN him.drawing_version ELSE spl.chart_version END ) AS chart_version,/*图纸版本*/
        spl.surface_treat_flag,/*表面处理标识(1为是，0为否)*/
        /*spl.pc_num,协议编号*/
        spl.jd_price,/*划线价*/
        spl.supplier_item_num,/*供应商料号*/
        spl.supplier_item_desc,/*供应商料号描述*/
        spl.production_order_num,/*生产工单号*/
        spl.project_category,/*项目类别*/
        spl.tax_without_freight_price,
        spl.account_assign_type_id,
        saat.account_assign_type_code,
        spl.cost_id,
        spl.price_contract_flag,
        scc.cost_code,
        scc.cost_name,
        spl.account_subject_id,
        spl.account_subject_num,
        sas.account_subject_name,
        spl.wbs_code,
        spl.wbs,
        spl.attachment_uuid,
        spl.price_tax_id,
        spll.confirm_flag,
        /*预计送货时间*/
        spll.expect_ship_date,
        spl.ladder_quotation_flag
        FROM
        sodr_po_line_location spll
        JOIN sodr_po_line spl ON spl.po_line_id = spll.po_line_id
        JOIN sodr_po_header sph ON sph.po_header_id = spl.po_header_id
        LEFT JOIN smdm_uom hu ON spl.uom_id = hu.uom_id
        LEFT JOIN smdm_uom_tl hul on hu.uom_id=hul.uom_id and hul.lang=#{lang}
        --         left join sprm_pr_line sprl on sprl.pr_line_id = spl.pr_line_id
        --         left JOIN sprm_pr_header sprh ON sprl.pr_header_id = sprh.pr_header_id
        LEFT JOIN smdm_item_category hic ON spl.category_id = hic.category_id
        LEFT JOIN hpfm_inv_organization hio ON spll.ship_to_organization_id = hio.organization_id
        LEFT JOIN hpfm_inv_organization hiog ON spll.inv_organization_id = hiog.organization_id
        LEFT JOIN hpfm_inventory hi ON spll.inv_inventory_id = hi.inventory_id
        LEFT JOIN hpfm_location hl ON spll.inv_location_id = hl.location_id
        LEFT JOIN smdm_item him ON spl.item_id = him.item_id
        LEFT JOIN smdm_tax ht ON spl.tax_id = ht.tax_id
        LEFT JOIN smdm_currency hc ON spl.currency_code = hc.currency_code AND hc.tenant_id = spll.tenant_id
        LEFT JOIN smdm_uom hup ON spl.price_uom_id = hup.uom_id
        LEFT JOIN smdm_uom_tl hupl on hup.uom_id=hupl.uom_id and hupl.lang=#{lang}
        LEFT JOIN hpfm_unit hut ON spl.demand_unit_id=hut.unit_id
        --         LEFT JOIN ssrc_source_change_history ssch on spl.po_line_id=ssch.execute_bill_line_id and ssch.executing_state='ORDER'
        --         LEFT JOIN ssrc_source_result ssr on ssr.result_id=ssch.source_result_id
        --         LEFT JOIN spcm_pc_change_history spcch ON spl.po_line_id = spcch.execute_bill_line_id
        --         LEFT JOIN spcm_pc_subject sps ON spcch.pc_subject_id=sps.pc_subject_id
        --         LEFT JOIN spcm_pc_header spch ON sps.pc_header_id = spch.pc_header_id
        --         LEFT JOIN ssrc_source_result ssrpc ON ssrpc.result_id = sps.source_line_num AND spch.pc_source_code = 'SEARCH_SOURCE_RESULT'
        LEFT JOIN spcm_po_change_history spoch ON spl.po_line_id = spoch.execute_bill_line_id AND spoch.tenant_id = #{tenantId,jdbcType=DECIMAL}
        LEFT JOIN spcm_pc_subject spsj ON spoch.pc_subject_id=spsj.pc_subject_id
        LEFT JOIN spcm_pc_header spchd ON spsj.pc_header_id = spchd.pc_header_id
        LEFT JOIN hpfm_unit_tl hutl on hutl.unit_id = spl.department_id and hutl.lang = #{lang}
        LEFT JOIN hpfm_purchase_organization hpo ON hpo.purchase_org_id = spl.clear_organization_id
        LEFT JOIN hpfm_purchase_organization hpo2 ON hpo2.purchase_org_id = spl.cope_organization_id
        LEFT JOIN ssrc_price_library sspl ON sspl.price_library_id = spl.price_library_id
        LEFT JOIN smdm_account_subject sas ON sas.account_subject_id = spl.account_subject_id
        LEFT JOIN smdm_cost_center scc ON scc.cost_id = spl.cost_id
        LEFT JOIN sprm_account_assign_type saat ON saat.account_assign_type_id = spl.account_assign_type_id
        LEFT JOIN sslm_external_supplier es on sph.supplier_id = es.supplier_id
        LEFT JOIN hpfm_company hsesc ON hsesc.company_id = es.link_id

        /*申请->订单*/
        left join sprm_pr_line sprl on sprl.pr_line_id = spl.pr_line_id
        left JOIN sprm_pr_header sprh ON sprl.pr_header_id = sprh.pr_header_id

        /*申请->寻源->订单*/
        /*申请->立项->寻源->订单*/
        LEFT JOIN ssrc_source_change_history ssch on spl.po_line_id=ssch.execute_bill_line_id and ssch.executing_state='ORDER'
        LEFT JOIN ssrc_source_result ssr on ssr.result_id=ssch.source_result_id
        LEFT JOIN ssrc_rfx_line_item srli on srli.rfx_line_item_id=ssr.source_line_item_id AND ssr.source_from='RFX'
        LEFT JOIN ssrc_bid_line_item sbli on sbli.bid_line_item_id=ssr.source_line_item_id AND ssr.source_from='BID'

        /*申请-》协议——》订单*/
        LEFT JOIN spcm_pc_change_history spcch ON spl.po_line_id = spcch.execute_bill_line_id AND spl.po_header_id=spcch.execute_bill_header_id
        LEFT JOIN spcm_pc_subject sps ON spcch.pc_subject_id=sps.pc_subject_id
        LEFT JOIN spcm_pc_header spch ON sps.pc_header_id = spch.pc_header_id
        /*申请->寻源->协议->订单*/
        /*申请->立项->寻源->协议->订单*/
        LEFT JOIN ssrc_source_result ssrpc ON ssrpc.result_id = sps.source_line_num AND spch.pc_source_code = 'SEARCH_SOURCE_RESULT'
        LEFT JOIN ssrc_rfx_line_item srlipc on srlipc.rfx_line_item_id=ssrpc.source_line_item_id AND ssrpc.source_from='RFX'
        LEFT JOIN ssrc_bid_line_item sblipc on sblipc.bid_line_item_id=ssrpc.source_line_item_id AND ssrpc.source_from='BID'

        WHERE
        1 = 1
        AND spll.po_header_id = #{poHeaderId,jdbcType=DECIMAL}
        AND spll.tenant_id = #{tenantId,jdbcType=DECIMAL}
        <bind name="userDetails" value="@io.choerodon.core.oauth.DetailsHelper@getUserDetails()"/>
        <if test="userDetails != null and userDetails.organizationId!=userDetails.tenantId">
            and sph.supplier_tenant_id=#{userDetails.organizationId}
        </if>
        ORDER BY spl.line_num, spll.line_location_num
    </select>

</mapper>

